#include "lists.h"

/**
 * insert_nodeint_at_index - Inserts a new node at a given position
 * @head: Pointer to a pointer to the first node of the list
 * @idx: The index of the list where the new node should be added (starting at 0)
 * @n: The integer to be stored in the new node
 *
 * Return: The address of the new node, or NULL if it failed
 */
listint_t *insert_nodeint_at_index(listint_t **head, unsigned int idx, int n)
{
	listint_t *newNode, *preVnode = NULL, *currentNode = *head;
	unsigned int i;

	if (head == NULL)
		return (NULL);

	newNode = malloc(sizeof(*newNode));
	if (newNode == NULL)
		return (NULL);

	newNode->n = n;

	for (i = 0; i < idx && currentNode != NULL; i++)
	{
		prevNode = currentNode;
		currentNode = currentNode->next;
	}

	if (i < idx)
	{
		free(newNoode);
		return (NULL);
	}

	newNode->next = currentNode;

	if (prevNode != NULL)
		prevNode->next = newNode;
	else
		*head = newNode;

	return (new_node);
}

